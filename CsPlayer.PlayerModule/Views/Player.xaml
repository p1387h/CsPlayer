<UserControl x:Class="CsPlayer.PlayerModule.Views.Player"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CsPlayer.PlayerModule.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="500"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:design="clr-namespace:CsPlayer.PlayerModule.Design"
             xmlns:converter="clr-namespace:CsPlayer.PlayerModule.Converter"
             d:DataContext="{d:DesignInstance design:DesignPlayerViewModel, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <converter:TimeSpanToStringConverter x:Key="TimeSpanStringConverter"></converter:TimeSpanToStringConverter>
        <converter:TimeSpanToIntConverter x:Key="TimeSpanIntConverter"></converter:TimeSpanToIntConverter>
        <!-- Custom TextBlock additions -->
        <Style x:Key="TextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource MetroTextBlock}">
            <Setter Property="FontFamily" Value="Verdana"></Setter>
        </Style>
        <!-- Custom Button style for icons -->
        <Style x:Key="ButtonIconStyle" TargetType="Button" BasedOn="{StaticResource MetroButton}">
            <Setter Property="MinWidth" Value="27"></Setter>
            <Setter Property="MinHeight" Value="27"></Setter>
            <Setter Property="Width" Value="27"></Setter>
            <Setter Property="Height" Value="27"></Setter>
            <Setter Property="Margin" Value="2"></Setter>
        </Style>
        <!-- Song list template -->
        <DataTemplate x:Key="SongDataTemplate">
            <Border BorderThickness="2" Margin="0,2">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="BorderBrush" Value="Black"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                <Setter Property="BorderBrush" Value="Transparent"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <DockPanel>
                    <DockPanel.Style>
                        <Style TargetType="DockPanel">
                            <Setter Property="Background" Value="Transparent"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Valid}" Value="False">
                                    <Setter Property="Background" Value="#ff8080"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                    <Setter Property="Background" Value="{StaticResource AccentColorBrush4}"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DockPanel.Style>
                    <!-- Arrows left -->
                    <UniformGrid DockPanel.Dock="Left" Rows="2" Columns="1">
                        <Button Style="{StaticResource ButtonIconStyle}" 
                                Background="Transparent"
                                BorderThickness="0"
                                Command="{Binding ButtonUp}">
                            <iconPacks:Material Kind="ArrowUpBold"></iconPacks:Material>
                        </Button>
                        <Button Style="{StaticResource ButtonIconStyle}" 
                                Background="Transparent" 
                                BorderThickness="0"
                                Command="{Binding ButtonDown}">
                            <iconPacks:Material Kind="ArrowDownBold"></iconPacks:Material>
                        </Button>
                    </UniformGrid>
                    <!-- Delete button and time right -->
                    <Grid DockPanel.Dock="Right">
                        <TextBlock VerticalAlignment="Center" 
                                   Margin="20,0,40,0" 
                                   Text="{Binding TotalTime, Converter={StaticResource TimeSpanStringConverter}}">
                        </TextBlock>
                        <Button VerticalAlignment="Top" 
                                HorizontalAlignment="Right"
                                Command="{Binding ButtonDelete}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ButtonIconStyle}">
                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                            <Setter Property="Visibility" Value="Hidden"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <iconPacks:Material Kind="Close"></iconPacks:Material>
                        </Button>
                    </Grid>
                    <!-- Index of song -->
                    <TextBlock DockPanel.Dock="Left" 
                               VerticalAlignment="Center"
                               Text="{Binding SongNumber}">
                    </TextBlock>
                    <!-- Name of song for non playing titles -->
                    <TextBlock DockPanel.Dock="Left" 
                               VerticalAlignment="Center" 
                               Text="{Binding Name}" 
                               Margin="20,0,0,0"
                               TextWrapping="Wrap">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <!-- Playtime of the currently playing song -->
                    <Grid Margin="20,0,0,0">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Slider Style="{DynamicResource FlatSlider}"
                                VerticalAlignment="Center"
                                Minimum="0"
                                Maximum="{Binding TotalTime, Converter={StaticResource TimeSpanIntConverter}}"
                                Value="{Binding CurrentTime, Converter={StaticResource TimeSpanIntConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                IsMoveToPointEnabled="True">
                        </Slider>
                        <TextBlock VerticalAlignment="Top" 
                                   Text="{Binding Name}"
                                   TextWrapping="NoWrap">
                        </TextBlock>
                    </Grid>
                </DockPanel>
            </Border>
        </DataTemplate>
    </UserControl.Resources>
    <DockPanel Background="White" Margin="10">
        <!-- Header information -->
        <DockPanel DockPanel.Dock="Top">
            <TextBlock Width="40"
                       DockPanel.Dock="Left"
                       Text="{Binding Playlist.ActiveSongSongNumber, StringFormat={}{0} /}" 
                       TextAlignment="Right">
            </TextBlock>
            <TextBlock Width="35" 
                       Margin="0,0,10,0" 
                       DockPanel.Dock="Left" 
                       Text="{Binding Playlist.SongCount, StringFormat={} {0}}">
            </TextBlock>
            <TextBlock Margin="20,0,42,0" 
                       DockPanel.Dock="Right" 
                       Text="{Binding Playlist.TotalTime, Converter={StaticResource TimeSpanStringConverter}}">
            </TextBlock>
            <TextBlock Margin="20,0" 
                       TextWrapping="Wrap" 
                       Text="{Binding Playlist.Name}" 
                       TextAlignment="Center">
            </TextBlock>
        </DockPanel>
        <!-- Player bottom buttons -->
        <DockPanel DockPanel.Dock="Bottom">
            <Button DockPanel.Dock="Right" Content="Save Changes" Command="{Binding SaveChanges}"></Button>
            <WrapPanel DockPanel.Dock="Left" HorizontalAlignment="Center">
                <WrapPanel.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonIconStyle}">
                        <Setter Property="Margin" Value="5,2,5,2"></Setter>
                    </Style>
                </WrapPanel.Resources>
                <Button Command="{Binding ButtonPrevious}">
                    <iconPacks:Material Kind="SkipPrevious"></iconPacks:Material>
                </Button>
                <Button Command="{Binding ButtonPlay}">
                    <iconPacks:Material Kind="Play"></iconPacks:Material>
                </Button>
                <Button Command="{Binding ButtonPause}">
                    <iconPacks:Material Kind="Pause"></iconPacks:Material>
                </Button>
                <Button Command="{Binding ButtonStop}">
                    <iconPacks:Material Kind="Stop"></iconPacks:Material>
                </Button>
                <Button Command="{Binding ButtonNext}">
                    <iconPacks:Material Kind="SkipNext"></iconPacks:Material>
                </Button>
            </WrapPanel>
        </DockPanel>
        <!-- Player center -->
        <Grid Margin="0,10">
            <ListView x:Name="SongList" 
                      ItemsSource="{Binding Playlist.Songs}" 
                      ItemTemplate="{StaticResource SongDataTemplate}"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      SelectedItem="{Binding Playlist.SelectedSong}">
            </ListView>
        </Grid>
    </DockPanel>
</UserControl>
